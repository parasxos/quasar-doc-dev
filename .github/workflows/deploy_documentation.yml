name: Deploy documentation

on:
  release:
    types: [ published ]
  push:
    branches:
      - master
      - feat-agrupate-ymls
      - dev*

jobs:

  build_deploy:
    name: Build and deploy documentation

    runs-on: self-hosted

    steps:
    - uses: actions/checkout@v2

    - name: Define version name
      run: |
        if [ ${{ startsWith(github.ref_name, 'dev') }} ]; then
          echo "VERSION_NAME=${{ github.ref_name }}" >> "$GITHUB_ENV"
          echo 'Choose a branch name for the release'
        elif [ ${{ github.event.release.tag_name != '' }} ]; then
          echo "VERSION_NAME=${{ env.VERSION_NAME }}" >> "$GITHUB_ENV"
          echo 'Choose a tag name for the release'
        else
          echo "VERSION_NAME=latest" >> "$GITHUB_ENV"
          echo 'Choose latest version'
        fi
        echo 'Version to build: ${{ env.VERSION_NAME }}'

    - name: Install dependencies
      run: |
        echo "${GITHUB_WORKSPACE}/"
        cd "${GITHUB_WORKSPACE}/"
        pip3 install --user -r requirements.txt

    - name: Create new folder
      run: |
        echo "Creating new folder ${{ env.VERSION_NAME }}"
        mkdir -p /home/fmagalla/quasar/${{ env.VERSION_NAME }}
    
    - name: Parse legacy documentation
      run: |
        cd "${GITHUB_WORKSPACE}/"
        ls -l ./docs/
        python3 ./docs/html2rst.py ${{ env.VERSION_NAME }}

    - name: Build documentation
      run: |
        cd "${GITHUB_WORKSPACE}/docs"
        make html
    
    - name: Update server
      run: |
        echo 'Change directory location to build html'
        cd "${GITHUB_WORKSPACE}/docs/build/html"

        echo 'Removing old build'
        rm -rf /home/fmagalla/quasar/${{ env.VERSION_NAME }}
        echo Enma19624 | sudo -S rm -rf /usr/share/nginx/quasar/${{ env.VERSION_NAME }}

        echo 'Creating new build'
        mkdir -p /home/fmagalla/quasar/${{ env.VERSION_NAME }}
        echo Enma19624 | sudo -S mkdir -p /usr/share/nginx/quasar/${{ env.VERSION_NAME }}

        echo 'Copying new build to local'
        cp -a . /home/fmagalla/quasar/${{ env.VERSION_NAME }}/
        
        echo 'Copying to nginx folder'
        sudo cp -r /home/fmagalla/quasar/${{ env.VERSION_NAME }} /usr/share/nginx/quasar

        echo 'Reloading nginx'
        echo Enma19624 | sudo -S nginx -s reload
