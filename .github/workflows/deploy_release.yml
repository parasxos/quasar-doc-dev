name: Deploy

on:
  release:
    types: [ published ]

jobs:
  build_deploy:
    name: Build and deploy new release ${{ github.event.release.tag_name }}

    runs-on: self-hosted

    steps:
    - uses: actions/checkout@v2
    - name: Install dependencies
      run: |
        echo "${GITHUB_WORKSPACE}/"
        cd "${GITHUB_WORKSPACE}/"
        pip3 install --user -r requirements.txt
    - name: Create new release
      run: |
        echo "Creating new release ${{ github.event.release.tag_name }}"
        mkdir -p /afs/cern.ch/user/f/fmagalla/quasar/${{ github.event.release.tag_name }}
    - name: Parse legacy documentation
      run: |
        whoami
        cd "${GITHUB_WORKSPACE}/"
        ls -l ./docs/
        python3 ./docs/html2rst.py
    - name: Build documentation
      run: |
        cd "${GITHUB_WORKSPACE}/docs"
        make html
    - name: Update server
      run: |
        echo 'Change dir location to build html'
        cd "${GITHUB_WORKSPACE}/docs/build/html"

        echo 'Removing old build'
        rm -rf /afs/cern.ch/user/f/fmagalla/quasar/${{ github.event.release.tag_name }}

        echo 'Creating new build'
        mkdir -p /afs/cern.ch/user/f/fmagalla/quasar/${{ github.event.release.tag_name }}

        ls -l
        echo 'Copying new build'
        cp -f -a . /afs/cern.ch/user/f/fmagalla/quasar/${{ github.event.release.tag_name }}
        ls -l /afs/cern.ch/user/f/fmagalla/quasar/${{ github.event.release.tag_name }}

        echo 'Reloading nginx'
        echo Enma19624 | sudo -S nginx -s reload

#        echo xx | sudo -S cp -f -a ./html/ /etc/nginx/quasar/${{ github.event.release.tag_name }}
#        echo xx | sudo -S chmod -R 660 . && chmod -R 660 /etc/nginx/quasar/${{ github.event.release.tag_name }}/ 